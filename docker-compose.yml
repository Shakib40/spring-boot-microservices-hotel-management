version: "3.9"

services:
  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "${CONFIG_SERVER_PORT:-8888}:${CONFIG_SERVER_PORT:-8888}"   
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-docker}
    networks:
      - spring-net

  discovery-server:
    build: ./discovery-server
    container_name: discovery-server
    ports:
      - "${DISCOVERY_SERVER_PORT:-8761}:${DISCOVERY_SERVER_PORT:-8761}"   
    depends_on:
      - config-server
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-docker}
    networks:
      - spring-net

#  auth-service:
#    build: ./auth-service
#    container_name: auth-service
#    ports:
#      - "8081:8080"
#    depends_on:
#      - config-server
#      - discovery-server
#      - mysql
#      - redis
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring-net

#  user-service:
#    build: ./user-service
#    container_name: user-service
#    ports:
#      - "8082:8080"
#    depends_on:
#      - config-server
#      - discovery-server
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring-net

  order-service:
   build: ./order-service
   container_name: order-service
   ports:
     - "${ORDER_SERVICE_PORT:-8083}:${ORDER_SERVICE_PORT:-8083}"
   depends_on:
     - config-server
     - discovery-server
   environment:
     - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-docker}
     - ORDER_DB_PASSWORD=${ORDER_DB_PASSWORD}
   networks:
     - spring-net

#  mysql:
#    image: mysql:8.0
#    container_name: mysql
#    environment:
#      - MYSQL_ROOT_PASSWORD=password
#      - MYSQL_DATABASE=hotel_auth_db
#    ports:
#      - "3306:3306"
#    networks:
#      - spring-net
#    volumes:
#      - mysql-data:/var/lib/mysql

#  redis:
#    image: redis:7-alpine
#    container_name: redis
#    ports:
#      - "6379:6379"
#    networks:
#      - spring-net

#  api-gateway:
#    build: ./api-gateway
#    container_name: api-gateway
#    ports:
#      - "8080:8080"
#    depends_on:
#      - auth-service
#      - user-service
#      - order-service
#      - discovery-server
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring-net

networks:
  spring-net:
    driver: bridge

volumes:
  mysql-data:
